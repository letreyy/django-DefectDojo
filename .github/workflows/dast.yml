name: DAST Scan

on:
  workflow_dispatch:

jobs:
  run-zap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤
        run: mkdir -p zap

      - name: –ó–∞–ø—É—Å–∫ OWASP ZAP Full Scan
        run: |
          docker run --rm -u root \
            -v $(pwd)/zap:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-full-scan.py \
            -t http://185.178.44.115:8080 \
            -r zap-report.html \
            -x zap-report.xml

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Ç—á—ë—Ç–∞ ZAP
        run: |
          echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ zap:"
          ls -lah zap
          if [ ! -f zap/zap-report.xml ]; then
            echo "‚ùå ZAP –æ—Ç—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Å—Ç–∞–Ω–æ–≤–∫–∞."
            exit 1
          fi
          echo "‚úÖ ZAP –æ—Ç—á—ë—Ç –Ω–∞–π–¥–µ–Ω."

      - name: –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á—ë—Ç–∞ –≤ DefectDojo
        env:
          DD_TOKEN: ${{ secrets.DD_TOKEN }}
        run: |
          echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –≤ DefectDojo..."
          RESPONSE=$(curl -s -w "%{http_code}" -o response.txt -X POST http://185.178.44.115:8080/api/v2/import-scan/ \
            -H "Authorization: Token $DD_TOKEN" \
            -F "file=@zap/zap-report.xml" \
            -F "scan_type=ZAP Scan" \
            -F "engagement=1" \
            -F "minimum_severity=Low" \
            -F "active=true" \
            -F "verified=true")

          if [ "$RESPONSE" -eq "201" ]; then
            echo "‚úÖ –û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ DefectDojo"
          else
            echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á—ë—Ç–∞. HTTP —Å—Ç–∞—Ç—É—Å: $RESPONSE"
            echo "--- –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
            cat response.txt
            exit 1
          fi
